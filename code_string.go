// Code generated by "stringer -type=Code"; DO NOT EDIT

package kbd

import "fmt"

const _Code_name = "CancelBackspaceTabClearReturnShiftControlAltPauseCapsLockEscapeSpacePageUpPageDownEndHomeLeftUpRightDownSelectPrintExecutePrintScreenInsertDeleteHelpKey0Key1Key2Key3Key4Key5Key6Key7Key8Key9KeyAKeyBKeyCKeyDKeyEKeyFKeyGKeyHKeyIKeyJKeyKKeyLKeyMKeyNKeyOKeyPKeyQKeyRKeySKeyTKeyUKeyVKeyWKeyXKeyYKeyZLeftWinRightWinAppsSleepNumpad0Numpad1Numpad2Numpad3Numpad4Numpad5Numpad6Numpad7Numpad8Numpad9NumpadMultiplyNumpadAddSeparatorNumpadSubtractNumpadDecimalNumpadDivideF1F2F3F4F5F6F7F8F9F10F11F12F13F14F15F16F17F18F19F20F21F22F23F24NumLockScrollLeftShiftRightShiftLeftControlRightControlLeftAltRightAltBrowserBackBrowserForwardBrowserRefreshBrowserStopBrowserSearchBrowserFavoritesBrowserHomeVolumeMuteVolumeDownVolumeUpMediaNextTrackMediaPrevTrackMediaStopMediaPlayPauseLaunchMailLaunchMediaSelectLaunchApp1LaunchApp2ColonPlusCommaMinusPeriodSlashTildeOpenBracketBackslashCloseBracketQuotePacketAttnCrSelExSelEraseEOFPlayZoomPa1OemClear"

var _Code_map = map[Code]string{
	3:   _Code_name[0:6],
	8:   _Code_name[6:15],
	9:   _Code_name[15:18],
	12:  _Code_name[18:23],
	13:  _Code_name[23:29],
	16:  _Code_name[29:34],
	17:  _Code_name[34:41],
	18:  _Code_name[41:44],
	19:  _Code_name[44:49],
	20:  _Code_name[49:57],
	27:  _Code_name[57:63],
	32:  _Code_name[63:68],
	33:  _Code_name[68:74],
	34:  _Code_name[74:82],
	35:  _Code_name[82:85],
	36:  _Code_name[85:89],
	37:  _Code_name[89:93],
	38:  _Code_name[93:95],
	39:  _Code_name[95:100],
	40:  _Code_name[100:104],
	41:  _Code_name[104:110],
	42:  _Code_name[110:115],
	43:  _Code_name[115:122],
	44:  _Code_name[122:133],
	45:  _Code_name[133:139],
	46:  _Code_name[139:145],
	47:  _Code_name[145:149],
	48:  _Code_name[149:153],
	49:  _Code_name[153:157],
	50:  _Code_name[157:161],
	51:  _Code_name[161:165],
	52:  _Code_name[165:169],
	53:  _Code_name[169:173],
	54:  _Code_name[173:177],
	55:  _Code_name[177:181],
	56:  _Code_name[181:185],
	57:  _Code_name[185:189],
	65:  _Code_name[189:193],
	66:  _Code_name[193:197],
	67:  _Code_name[197:201],
	68:  _Code_name[201:205],
	69:  _Code_name[205:209],
	70:  _Code_name[209:213],
	71:  _Code_name[213:217],
	72:  _Code_name[217:221],
	73:  _Code_name[221:225],
	74:  _Code_name[225:229],
	75:  _Code_name[229:233],
	76:  _Code_name[233:237],
	77:  _Code_name[237:241],
	78:  _Code_name[241:245],
	79:  _Code_name[245:249],
	80:  _Code_name[249:253],
	81:  _Code_name[253:257],
	82:  _Code_name[257:261],
	83:  _Code_name[261:265],
	84:  _Code_name[265:269],
	85:  _Code_name[269:273],
	86:  _Code_name[273:277],
	87:  _Code_name[277:281],
	88:  _Code_name[281:285],
	89:  _Code_name[285:289],
	90:  _Code_name[289:293],
	91:  _Code_name[293:300],
	92:  _Code_name[300:308],
	93:  _Code_name[308:312],
	95:  _Code_name[312:317],
	96:  _Code_name[317:324],
	97:  _Code_name[324:331],
	98:  _Code_name[331:338],
	99:  _Code_name[338:345],
	100: _Code_name[345:352],
	101: _Code_name[352:359],
	102: _Code_name[359:366],
	103: _Code_name[366:373],
	104: _Code_name[373:380],
	105: _Code_name[380:387],
	106: _Code_name[387:401],
	107: _Code_name[401:410],
	108: _Code_name[410:419],
	109: _Code_name[419:433],
	110: _Code_name[433:446],
	111: _Code_name[446:458],
	112: _Code_name[458:460],
	113: _Code_name[460:462],
	114: _Code_name[462:464],
	115: _Code_name[464:466],
	116: _Code_name[466:468],
	117: _Code_name[468:470],
	118: _Code_name[470:472],
	119: _Code_name[472:474],
	120: _Code_name[474:476],
	121: _Code_name[476:479],
	122: _Code_name[479:482],
	123: _Code_name[482:485],
	124: _Code_name[485:488],
	125: _Code_name[488:491],
	126: _Code_name[491:494],
	127: _Code_name[494:497],
	128: _Code_name[497:500],
	129: _Code_name[500:503],
	130: _Code_name[503:506],
	131: _Code_name[506:509],
	132: _Code_name[509:512],
	133: _Code_name[512:515],
	134: _Code_name[515:518],
	135: _Code_name[518:521],
	144: _Code_name[521:528],
	145: _Code_name[528:534],
	160: _Code_name[534:543],
	161: _Code_name[543:553],
	162: _Code_name[553:564],
	163: _Code_name[564:576],
	164: _Code_name[576:583],
	165: _Code_name[583:591],
	166: _Code_name[591:602],
	167: _Code_name[602:616],
	168: _Code_name[616:630],
	169: _Code_name[630:641],
	170: _Code_name[641:654],
	171: _Code_name[654:670],
	172: _Code_name[670:681],
	173: _Code_name[681:691],
	174: _Code_name[691:701],
	175: _Code_name[701:709],
	176: _Code_name[709:723],
	177: _Code_name[723:737],
	178: _Code_name[737:746],
	179: _Code_name[746:760],
	180: _Code_name[760:770],
	181: _Code_name[770:787],
	182: _Code_name[787:797],
	183: _Code_name[797:807],
	186: _Code_name[807:812],
	187: _Code_name[812:816],
	188: _Code_name[816:821],
	189: _Code_name[821:826],
	190: _Code_name[826:832],
	191: _Code_name[832:837],
	192: _Code_name[837:842],
	219: _Code_name[842:853],
	220: _Code_name[853:862],
	221: _Code_name[862:874],
	222: _Code_name[874:879],
	231: _Code_name[879:885],
	246: _Code_name[885:889],
	247: _Code_name[889:894],
	248: _Code_name[894:899],
	249: _Code_name[899:907],
	250: _Code_name[907:911],
	251: _Code_name[911:915],
	253: _Code_name[915:918],
	254: _Code_name[918:926],
}

func (i Code) String() string {
	if str, ok := _Code_map[i]; ok {
		return str
	}
	return fmt.Sprintf("Code(%d)", i)
}
